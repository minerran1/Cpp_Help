#*****************************************************************************************************************
#*                        SEQUENCER JUMP & JUMP I - TEST CASES 12-19
#*             COPYRIGHT 2002 MOTOROLA, INC. ALL RIGHTS RESERVED.
#*                            MOTOROLA CONFIDENTIAL PROPRIETARY
#*                                         TEMPLATE VERSION R01.00
#*
#****************************************************************************************************************
#===========================================================================================================
#SEQUENCER UNIT TEST Created: 2/12/02
#===========================================================================================================
#The following command sequences will call the sequencer command group and the various sequences found 
#in rfAudioInit.cpp for the purpose of unit testing the Sequencer.
#After executing these command sequences, verify the output with the expected output file.  If the output differs, the sequence being called should be 
#investigated.
#For detailed information, see the unit test sequences in the rfAudioInit.cpp.
#To run this test, copy the contents of this file into the commandSequence.txt file of the test harness server.
#
#NOTE:    If the following command sequences do not produce an output file, open the test.log file, then re-run the test.  There is a known issue with
#the test harness that sometimes prevents the logging of information.
#================================================================================================================
#Test Case 12: JUMP I ALWAYS
#This conditional statement produces an infinite loop that 'jumps' back (decrements program counter) and continues
#to call setRFState over and over again.  Check output for many setRFState calls to verify proper functionality.
#================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000020&
#   -Get Global
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#================================================================================================================
#Test Case 13: JUMP I EQUALS
#This conditional statement checks if two numbers are equal.  It will contain a false statement, and two true statements.
#=================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000021&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#==================================================================================================================
#Test Case 14: JUMP I NOT EQUALS
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#==================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000022&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#=================================================================================================================
#Test Case 15: GREATER THAN
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#=================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000023&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#==================================================================================================================
#Test Case 16: LESS THAN
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#==================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000024&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#==================================================================================================================
#Test Case 17: GREATER THAN OR EQUAL TO
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#==================================================================================================================
#    -Start Sequence
2,2,0,4,0x00000025&
#    -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#===================================================================================================================
#Test Case 18: LESS THAN OR EQUAL TO
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#===================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000026&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&
#=====================================================================================================================
#Test Case 19: JUMP
#Please verify the ouput (loaded global numbers) with the appropriate expected results.
#=====================================================================================================================
#   -Start Sequence
2,2,0,4,0x00000027&
#   -Get Globals
2,1,4,4,0x00000000&
2,1,4,4,0x00000001&
2,1,4,4,0x00000002&
2,1,4,4,0x00000003&
2,1,4,4,0x00000004&
2,1,4,4,0x00000005&
2,1,4,4,0x00000006&
2,1,4,4,0x00000007&
2,1,4,4,0x00000008&
2,1,4,4,0x00000009&
2,1,4,4,0x0000000A&
2,1,4,4,0x0000000B&
2,1,4,4,0x0000000C&
2,1,4,4,0x0000000D&
2,1,4,4,0x0000000E&
2,1,4,4,0x0000000F&